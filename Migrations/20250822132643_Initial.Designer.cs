// <auto-generated />
using System;
using EmployeeAttendance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeAttendance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250822132643_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeAttendance.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId", "Date")
                        .IsUnique();

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInTime = new DateTime(2025, 8, 21, 8, 30, 0, 0, DateTimeKind.Local),
                            CheckOutTime = new DateTime(2025, 8, 21, 17, 30, 0, 0, DateTimeKind.Local),
                            Date = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            EmployeeId = 1,
                            Status = "Present"
                        },
                        new
                        {
                            Id = 2,
                            CheckInTime = new DateTime(2025, 8, 21, 9, 15, 0, 0, DateTimeKind.Local),
                            CheckOutTime = new DateTime(2025, 8, 21, 17, 45, 0, 0, DateTimeKind.Local),
                            Date = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            EmployeeId = 2,
                            Status = "Late"
                        },
                        new
                        {
                            Id = 3,
                            CheckInTime = new DateTime(2025, 8, 21, 8, 45, 0, 0, DateTimeKind.Local),
                            CheckOutTime = new DateTime(2025, 8, 21, 17, 15, 0, 0, DateTimeKind.Local),
                            Date = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            EmployeeId = 3,
                            Status = "Present"
                        });
                });

            modelBuilder.Entity("EmployeeAttendance.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "IT",
                            Email = "john.doe@company.com",
                            EmployeeId = "EMP001",
                            FirstName = "John",
                            HireDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Doe",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 2,
                            Department = "HR",
                            Email = "jane.smith@company.com",
                            EmployeeId = "EMP002",
                            FirstName = "Jane",
                            HireDate = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Smith",
                            Position = "HR Manager"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Finance",
                            Email = "mike.johnson@company.com",
                            EmployeeId = "EMP003",
                            FirstName = "Mike",
                            HireDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Johnson",
                            Position = "Accountant"
                        });
                });

            modelBuilder.Entity("EmployeeAttendance.Models.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Allowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("EmployeeAttendance.Models.Attendance", b =>
                {
                    b.HasOne("EmployeeAttendance.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAttendance.Models.Payroll", b =>
                {
                    b.HasOne("EmployeeAttendance.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAttendance.Models.Employee", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
